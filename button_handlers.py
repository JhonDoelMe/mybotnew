from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
import weather
import currency
import air_raid
import logging

logger = logging.getLogger(__name__)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏
main_keyboard = [['üå§Ô∏è –ü–æ–≥–æ–¥–∞'], ['üíµ –ö—É—Ä—Å –≤–∞–ª—é—Ç'], ['üö® –í–æ–∑–¥—É—à–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞']]
main_reply_markup = ReplyKeyboardMarkup(main_keyboard, resize_keyboard=True)

async def handle_weather_buttons(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ–≥–æ–¥—ã"""
    try:
        text = update.message.text
        if text == 'üåû –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞':
            await weather.get_weather(update, context)
        elif text == 'üèôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥':
            await weather.handle_city_change(update, context)
        elif text == '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_reply_markup)
            context.user_data.clear()
    except Exception as e:
        logger.error(f"Weather button error: {e}")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")

async def handle_currency_buttons(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≤–∞–ª—é—Ç"""
    try:
        text = update.message.text
        if text in ('üí≤ USD', '‚Ç¨ EUR'):
            await currency.get_exchange_rate(update, context)
        elif text == 'üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É':
            await currency.show_currency_menu(update, context)
        elif text == '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_reply_markup)
            context.user_data.clear()
    except Exception as e:
        logger.error(f"Currency button error: {e}")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")

async def handle_air_raid_buttons(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ —Ç—Ä–µ–≤–æ–≥"""
    try:
        text = update.message.text
        if text == 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–≤–æ–≥–∏':
            await air_raid.check_air_raid(update, context)
        elif text in ('üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'üîï –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'):
            await air_raid.toggle_notifications(update, context)
        elif text == 'üåç –í—ã–±—Ä–∞—Ç—å –æ–±–ª–∞—Å—Ç—å':
            await air_raid.select_oblast(update, context)
        elif text == 'üèòÔ∏è –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥':
            await air_raid.select_location(update, context)
        elif text == '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_reply_markup)
            context.user_data.clear()
        else:
            await air_raid.handle_air_raid_input(update, context)
    except Exception as e:
        logger.error(f"Air raid button error: {e}")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")

async def handle_module_buttons(update: Update, context: CallbackContext):
    """–ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–æ–¥—É–ª–µ–π"""
    try:
        current_module = context.user_data.get('current_module')
        if not current_module:
            await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=main_reply_markup)
            return
        
        if current_module == 'weather':
            await handle_weather_buttons(update, context)
        elif current_module == 'currency':
            await handle_currency_buttons(update, context)
        elif current_module == 'air_raid':
            await handle_air_raid_buttons(update, context)
    except Exception as e:
        logger.error(f"Module buttons error: {e}")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã")
        await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_reply_markup)
        context.user_data.clear()