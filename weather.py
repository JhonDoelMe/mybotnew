# weather.py
import requests
import json
import logging
from typing import Optional, Dict, Any

import telegram
from telegram.ext import ContextTypes

import config # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å config
from constants import DEFAULT_CITY

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# URL API OpenWeatherMap
WEATHER_API_URL = "http://api.openweathermap.org/data/2.5/weather"

def get_weather(city: str) -> Optional[Dict[str, Any]]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Å OpenWeatherMap API.

    Args:
        city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.

    Returns:
        Optional[Dict[str, Any]]: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    api_key = config.cfg.get('WEATHER_API_KEY')
    if not api_key:
        logger.error("Weather API key (WEATHER_API_KEY) not configured.")
        return None

    params = {
        'q': city,
        'appid': api_key,
        'units': 'metric', # –ì—Ä–∞–¥—É—Å—ã –¶–µ–ª—å—Å–∏—è
        'lang': 'uk' # –Ø–∑—ã–∫ –æ—Ç–≤–µ—Ç–∞ - —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π
    }

    try:
        response = requests.get(WEATHER_API_URL, params=params, timeout=10)
        response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ HTTP –æ—à–∏–±–∫–∏ (–∫—Ä–æ–º–µ 404, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ)

        if response.status_code == 200:
            try:
                data = response.json()
                if isinstance(data, dict):
                    return data
                else:
                    logger.error(f"Weather API returned unexpected data type: {type(data)}. Expected dict.")
                    return None
            except json.JSONDecodeError as e:
                logger.error(f"Failed to decode JSON response from Weather API: {e}")
                logger.debug(f"Response text: {response.text}")
                return None
            except Exception as e:
                 logger.error(f"An unexpected error occurred during JSON processing: {e}")
                 return None
        else:
            # –≠—Ç–∞ –≤–µ—Ç–∫–∞ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∏–∑-–∑–∞ raise_for_status, –Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã
            logger.error(f"Weather API request failed with status code {response.status_code}: {response.text}")
            return None

    except requests.exceptions.HTTPError as e:
        if e.response.status_code == 404:
            logger.warning(f"City '{city}' not found by Weather API.")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ None, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–Ω—è–ª, —á—Ç–æ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
            return {'cod': '404', 'message': 'city not found'}
        elif e.response.status_code == 401:
            logger.error(f"Weather API request failed: Invalid API key or not authorized. {e}")
            return None # –ö–ª—é—á –Ω–µ–≤–µ—Ä–Ω—ã–π, —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
        else:
             logger.error(f"HTTP error fetching weather for {city}: {e}")
             return None
    except requests.exceptions.RequestException as e:
        logger.error(f"Network error fetching weather for {city}: {e}")
        return None
    except Exception as e:
        logger.error(f"An unexpected error occurred in get_weather for {city}: {e}")
        return None


def format_weather_message(weather_data: Dict[str, Any]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ.

    Args:
        weather_data: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç API OpenWeatherMap.

    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if not weather_data or weather_data.get('cod') != 200:
        if weather_data and weather_data.get('cod') == '404':
            return "–ù–∞ –∂–∞–ª—å, –Ω–µ –º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è —Ç–∞–∫–æ–≥–æ –º—ñ—Å—Ç–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É –Ω–∞–∑–≤—É."
        return "–í–∏–±–∞—á—Ç–µ, –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É."

    city_name = weather_data.get('name', '–ù–µ–≤—ñ–¥–æ–º–µ –º—ñ—Å—Ç–æ')
    main_info = weather_data.get('main', {})
    weather_desc_list = weather_data.get('weather', [])
    wind_info = weather_data.get('wind', {})

    temp = main_info.get('temp')
    feels_like = main_info.get('feels_like')
    humidity = main_info.get('humidity')
    pressure_hpa = main_info.get('pressure')
    wind_speed = wind_info.get('speed')

    description = weather_desc_list[0].get('description', '–Ω–µ–≤—ñ–¥–æ–º–æ') if weather_desc_list else '–Ω–µ–≤—ñ–¥–æ–º–æ'
    icon_code = weather_desc_list[0].get('icon', '') if weather_desc_list else ''

    # –ü—Ä–æ—Å—Ç–æ–π –º–∞–ø–ø–∏–Ω–≥ –∫–æ–¥–æ–≤ –∏–∫–æ–Ω–æ–∫ –≤ —ç–º–æ–¥–∑–∏ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
    weather_icons = {
        "01d": "‚òÄÔ∏è", "01n": "üåô",
        "02d": "‚õÖÔ∏è", "02n": "‚òÅÔ∏è",
        "03d": "‚òÅÔ∏è", "03n": "‚òÅÔ∏è",
        "04d": "‚òÅÔ∏è", "04n": "‚òÅÔ∏è",
        "09d": "üå¶", "09n": "üåß",
        "10d": "üåß", "10n": "üåß",
        "11d": "‚õà", "11n": "‚õà",
        "13d": "‚ùÑÔ∏è", "13n": "‚ùÑÔ∏è",
        "50d": "üå´", "50n": "üå´",
    }
    weather_emoji = weather_icons.get(icon_code, "")

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞–≤–ª–µ–Ω–∏—è –∏–∑ –≥–ü–∞ –≤ –º–º —Ä—Ç. —Å—Ç. (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ)
    pressure_mmhg = int(pressure_hpa * 0.750062) if pressure_hpa else None

    message = f"–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ **{city_name}**:\n\n"
    message += f"{weather_emoji} {description.capitalize()}\n"
    if temp is not None:
        message += f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp:.1f}¬∞C\n"
    if feels_like is not None:
        message += f"   –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {feels_like:.1f}¬∞C\n"
    if humidity is not None:
        message += f"üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
    if pressure_mmhg is not None:
        message += f"üìä –¢–∏—Å–∫: {pressure_mmhg} –º–º —Ä—Ç. —Å—Ç.\n"
    if wind_speed is not None:
        message += f"üí® –í—ñ—Ç–µ—Ä: {wind_speed:.1f} –º/—Å\n"

    return message.strip()

async def get_weather_command(update: telegram.Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã.
    –°–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≥–æ—Ä–æ–¥, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö.
    """
    city = " ".join(context.args) if context.args else None

    if not city:
        # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–º–∞–Ω–¥–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–ª—è –∫–Ω–æ–ø–∫–∏)
        # –ò–ª–∏ –º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≥–æ—Ä–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ä–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
        city = DEFAULT_CITY
        # await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ç–æ:")
        # # –ó–¥–µ—Å—å –Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ ConversationHandler)
        # # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ä–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        logger.info(f"City not provided, using default: {city}")
        # –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π —É–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥:
        # await update.message.reply_text(f"–ü–æ–∫–∞–∑—É—é –ø–æ–≥–æ–¥—É –¥–ª—è {city}. –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –ø–æ–≥–æ–¥—É –¥–ª—è —ñ–Ω—à–æ–≥–æ –º—ñ—Å—Ç–∞, –Ω–∞–ø–∏—à—ñ—Ç—å '/weather –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞'")


    if city:
        weather_data = get_weather(city)
        message = format_weather_message(weather_data)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º MarkdownV2 –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞
        await update.message.reply_text(message, parse_mode=telegram.constants.ParseMode.MARKDOWN_V2)
    # else: # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ —Ç–∞–∫ –∏ –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω
    #     await update.message.reply_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º—ñ—Å—Ç–æ. –°–ø—Ä–æ–±—É–π—Ç–µ '/weather –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞'.")